blueprint:
  name: "Alarma por detección continua de movimiento"
  description: "Hace sonar una alarma si uno o varios sensores han detectado movimiento durante un tiempo determinado y se desactiva si no detecta movimiento. Envía una notificación a los teléfonos configurados y captura imágenes de una cámara."
  domain: automation
  input:
    motion_sensors:
      name: "Sensores de movimiento"
      description: "Selecciona uno o varios sensores de movimiento."
      selector:
        entity:
          domain: binary_sensor
          device_class: motion
          multiple: true

    alarm:
      name: "Dispositivo de alarma"
      description: "Selecciona el dispositivo de alarma a activar."
      selector:
        entity:
          domain: siren

    delay_time:
      name: "Tiempo de espera (minutos)"
      description: "Tiempo que debe permanecer activo el sensor antes de activar la alarma."
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: "minutos"
          mode: slider

    off_delay_time:
      name: "Tiempo de espera para apagado (minutos)"
      description: "Tiempo que debe permanecer sin detección de movimiento antes de desactivar la alarma."
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: "minutos"
          mode: slider

    notify_devices:
      name: "Dispositivos para notificación"
      description: "Selecciona los dispositivos que recibirán notificaciones."
      selector:
        device:
          integration: mobile_app
          multiple: true

    camera_entity:
      name: "Cámara de seguridad"
      description: "Selecciona la cámara que tomará capturas de pantalla."
      selector:
        entity:
          domain: camera

mode: restart

trigger:
  - platform: state
    entity_id: !input motion_sensors
    to: "on"
    for:
      minutes: !input delay_time
    id: "movimiento_detectado"

  - platform: state
    entity_id: !input motion_sensors
    to: "off"
    for:
      minutes: !input off_delay_time
    id: "movimiento_terminado"

variables:
  camara: !input camera_entity
  captura_ruta: "/config/www/captura.jpg"
  captura_url: "/local/captura.jpg"

actions:
  - choose:
      - conditions:
          - condition: trigger
            id: "movimiento_detectado"
        sequence:
          - service: siren.turn_on
            target:
              entity_id: !input alarm
          - repeat:
              count: 5
              sequence:
                - service: camera.snapshot
                  target:
                    entity_id: "{{ camara }}"
                  data:
                    filename: "{{ captura_ruta }}"
                - delay: "00:00:02"
          - alias: "Notificar que se ha detectado movimiento"
            domain: mobile_app
            type: notify
            device_id: !input notify_device
            message: "⚠️ Se ha detectado movimiento continuo."
            data:
              image: "{{ captura_url }}"
              push:
                interruption-level: time-sensitive

      - conditions:
          - condition: trigger
            id: "movimiento_terminado"
        sequence:
          - service: siren.turn_off
            target:
              entity_id: !input alarm
          - alias: "Notificar que la alarma se ha desactivado"
            domain: mobile_app
            type: notify
            device_id: !input notify_device
            message: "✅ Alarma desactivada. No se detecta más movimiento."
            data:
              push:
                interruption-level: passive