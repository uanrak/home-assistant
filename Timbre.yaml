blueprint:
  name: "Timbre inteligente por planta"
  description: >
    Activa un switch como timbre y ejecuta un script según qué sensor (por planta) detecte presencia.
    Si ningún sensor detecta, se activa un Fingerbot como fallback.
  domain: automation

  input:
    sensores:
      name: "Sensores de presencia por planta"
      description: "Ordenados por planta. Si hay movimiento, se activará el switch correspondiente y se ejecutará un script con él como parámetro."
      selector:
        entity:
          domain: binary_sensor
          device_class: motion
          multiple: true

    timbres:
      name: "Switches por planta (timbres)"
      description: "Lista de switches que actuarán como timbres. Ordenados como los sensores."
      selector:
        entity:
          domain: switch
          multiple: true

    script:
      name: "Script a ejecutar"
      description: "Script que se ejecutará con el switch como parámetro."
      selector:
        entity:
          domain: script

    fingerbot:
      name: "Fingerbot de respaldo"
      description: "Dispositivo que se activará si ningún sensor detecta movimiento."
      selector:
        entity:
          domain: switch

    boton:
      name: "Botón de activación"
      description: "Botón Zigbee compatible con eventos ZHA (como TS004F)."
      selector:
        device:
          filter:
            integration: zha

mode: queued

trigger:
  - platform: device
    device_id: !input boton
    domain: zha
    type: remote_button_short_press
    subtype: button_1

variables:
  sensores_var: !input sensores
  timbres_var: !input timbres
  script_var: !input script
  fingerbot_var: !input fingerbot

action:
  - variables:
      activados: >-
        {% set lista = [] %}
        {% for i in range(sensores_var | length) %}
          {% if is_state(sensores_var[i], 'on') %}
            {% set _ = lista.append(i) %}
          {% endif %}
        {% endfor %}
        {{ lista }}

  - choose:
      - conditions:
          - condition: template
            value_template: "{{ activados | length > 0 }}"
        sequence:
          - repeat:
              for_each: "{{ activados }}"
              sequence:
                - service: script.turn_on
                  target:
                    entity_id: "{{ script_var }}"
                  data:
                    variables:
                      sirena: "{{ timbres_var[repeat.item] }}"
      - conditions:
          - condition: template
            value_template: "{{ activados | length == 0 }}"
        sequence:
          - service: switch.turn_on
            target:
              entity_id: "{{ fingerbot_var }}"