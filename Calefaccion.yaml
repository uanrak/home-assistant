blueprint:
  name: "Escena Condicional con Input Booleano"
  description: "Activa una de dos escenas o entidades según el estado de un booleano. Las entidades de tipo input_boolean o switch se pondrán en 'on' o 'off'; las escenas o scripts se ejecutarán."
  domain: automation
  input:
    toggle_boolean:
      name: "Interruptor de condición"
      description: "Selecciona la entidad booleana que determinará qué acción se activa."
      selector:
        entity:
          filter:
            - domain: input_boolean
            - domain: switch
            - domain: binary_sensor
    scene_true:
      name: "Acción cuando es True"
      description: "Escena, script o entidad que se activará o se pondrá en 'on' cuando el booleano esté en 'on'."
      selector:
        entity:
          filter:
            - domain: scene
            - domain: script
            - domain: input_boolean
            - domain: switch
    scene_false:
      name: "Acción cuando es False"
      description: "Escena, script o entidad que se ejecutará o se pondrá en 'off' cuando el booleano esté en 'off'."

      selector:
        entity:
          filter:
            - domain: scene
            - domain: script
            - domain: input_boolean
            - domain: switch
    delay_seconds:
      name: "Retraso en segundos"
      description: "Tiempo a esperar antes de ejecutar la acción."
      default: 0
      selector:
        number:
          min: 0
          max: 3600
          unit_of_measurement: segundos
          mode: box
    smart_plug_sensor:
      name: "Sensor de enchufe inteligente"
      description: "Sensor del enchufe que indica si está encendido."
      selector:
        entity:
          domain: sensor
    activation_threshold:
      name: "Umbral de activación"
      description: "Valor del sensor por encima del cual se considera que el enchufe está encendido."
      default: 1
      selector:
        number:
          min: 0
          max: 10000
          mode: box

mode: restart

trigger:
  - platform: state
    entity_id: !input toggle_boolean

action:
  - choose:
      - conditions:
          - condition: state
            entity_id: !input toggle_boolean
            state: "on"
        sequence:
          - variables:
              target_true: !input scene_true
              target_true_domain: "{{ target_true.split('.')[0] }}"
          - repeat:
              sequence:
                - service: "{{ target_true_domain }}.turn_on"
                  target:
                    entity_id: "{{ target_true }}"
                - delay:
                    seconds: 5
              until:
                - condition: numeric_state
                  entity_id: !input smart_plug_sensor
                  above: !input activation_threshold
              max: 3

      - conditions:
          - condition: state
            entity_id: !input toggle_boolean
            state: "off"
        sequence:
          - delay: !input delay_seconds
          - variables:
              target_false: !input scene_false
              target_false_domain: "{{ target_false.split('.')[0] }}"
          - repeat:
              sequence:
                - choose:
                    - conditions:
                        - condition: template
                          value_template: "{{ target_false_domain in ['scene', 'script'] }}"
                      sequence:
                        - service: "{{ target_false_domain }}.turn_on"
                          target:
                            entity_id: "{{ target_false }}"
                  default:
                    - service: "{{ target_false_domain }}.turn_off"
                      target:
                        entity_id: "{{ target_false }}"
                - delay:
                    seconds: 5
              until:
                - condition: numeric_state
                  entity_id: !input smart_plug_sensor
                  below: !input activation_threshold
              max: 3

